{
  "hash": "17c01bc241f1a5835ac6a67bcd7fe422",
  "result": {
    "markdown": "---\ntitle: Transforming\nlang: en\nsubtitle: Prompt Engineering 5\nauthor: Jan Kirenz\nexecute:\n  eval: false\n  echo: true\nhighlight-style: github\nformat:\n  revealjs: \n    toc: true\n    toc-depth: 1\n    embed-resources: false\n    theme: [dark, ../custom.scss]  \n    incremental: true\n    transition: slide\n    background-transition: fade\n    transition-speed: slow\n    code-copy: true\n    code-line-numbers: true\n    smaller: false\n    scrollable: true\n    slide-number: c\n    preview-links: auto\n    chalkboard: \n      buttons: false\n   #logo: images/logo.png\n    footer: Jan Kirenz\n---\n\n# Transforming\n\nIn this tutorial, we will explore how to use Large Language Models for text transformation tasks such as language translation, spelling and grammar checking, tone adjustment, and format conversion.\n\n# Setup\n\n## API key and Python libaries\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nfrom redlines import Redlines\nfrom IPython.display import display, Markdown, Latex, HTML, JSON\nimport openai\nimport os\n\nfrom dotenv import load_dotenv, find_dotenv\n_ = load_dotenv(find_dotenv())  \n\nopenai.api_key = os.getenv('OPENAI_API_KEY')\n```\n:::\n\n\n## Helper function\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\ndef get_completion(prompt, model=\"gpt-3.5-turbo\", temperature=0):\n    messages = [{\"role\": \"user\", \"content\": prompt}]\n    response = openai.ChatCompletion.create(\n        model=model,\n        messages=messages,\n        temperature=temperature,\n    )\n    return response.choices[0].message[\"content\"]\n\n```\n:::\n\n\n# Translation\n\n- ChatGPT is trained with sources in many languages\n- This gives the model the ability to do translation\n\n\n## Translate this text\n\n::: {.cell execution_count=3}\n```` {.python .cell-code}\nprompt = f\"\"\"\nTranslate the following English text to German: \\ \n```Hi, I would like to order a blender```\n\"\"\"\n\nresponse = get_completion(prompt)\nprint(response)\n````\n:::\n\n\n- Output: Hallo, ich möchte gerne einen Mixer bestellen.\n\n## Which language is this?\n\n::: {.cell execution_count=4}\n```` {.python .cell-code}\nprompt = f\"\"\"\nTell me which language this is: \n```Wie geht es dir?```\n\"\"\"\nresponse = get_completion(prompt)\nprint(response)\n````\n:::\n\n\n- Output: This language is German.\n\n\n## Translate with style\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\nprompt = f\"\"\"\nTranslate the following text to German in both the \\\nformal and informal forms: \n'Would you like to order a pillow?'\n\"\"\"\nresponse = get_completion(prompt)\nprint(response)\n```\n:::\n\n\n- Output:\n  - Formal: Möchten Sie ein Kissen bestellen?\n  - Informal: Möchtest du ein Kissen bestellen?\n\n# Universal Translator\n\n## Context\n\n- Imagine you are in charge of IT at a large multinational e-commerce company\n- Users are messaging you with IT issues in all their native languages\n- Your staff is from all over the world and speaks only their native languages\n- You need a universal translator!\n\n## User messages\n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\nuser_messages = [\n    \"La performance du système est plus lente que d'habitude.\",\n    \"Mi monitor tiene píxeles que no se iluminan.\",\n    \"Il mio mouse non funziona\",\n    \"Mój klawisz Ctrl jest zepsuty\",\n    \"我的屏幕在闪烁\"\n]\n```\n:::\n\n\n## Translations\n\n::: {.cell execution_count=7}\n``` {.python .cell-code}\nfor issue in user_messages:\n    prompt = f\"Tell me what language this is: ```{issue}```\"\n    lang = get_completion(prompt)\n    print(f\"Original message ({lang}): {issue}\")\n\n    prompt = f\"\"\"\n    Translate the following  text to English \\\n    and German: ```{issue}```\n    \"\"\"\n    response = get_completion(prompt)\n    print(response, \"\\n\")\n```\n:::\n\n\n## Output {.smaller}\n\nOriginal message (The language is French.): La performance du système est plus lente que d'habitude.\nThe performance of the system is slower than usual.\n\nDie Leistung des Systems ist langsamer als gewöhnlich. \n\nOriginal message (The language is Spanish.): Mi monitor tiene píxeles que no se iluminan.\nEnglish: \"My monitor has pixels that do not light up.\"\n\nGerman: \"Mein Monitor hat Pixel, die nicht aufleuchten.\" \n\nOriginal message (The language is Italian.): Il mio mouse non funziona\nEnglish: My mouse is not working.\nGerman: Meine Maus funktioniert nicht. \n\nOriginal message (The language is Polish.): Mój klawisz Ctrl jest zepsuty\nEnglish: \"My Ctrl key is broken\"\nGerman: \"Meine Strg-Taste ist kaputt\" \n\nOriginal message (The language is Chinese.): 我的屏幕在闪烁\nEnglish: My screen is flickering.\nGerman: Mein Bildschirm flackert. \n \n\n# Tone Transformation\n\n- Writing can vary based on the intended audience. \n- ChatGPT can produce different tones.\n\n## From slang to business tone\n\n::: {.cell execution_count=8}\n``` {.python .cell-code}\nprompt = f\"\"\"\nTranslate the following from slang to a business letter: \n'Dude, This is Joe, check out this spec on this standing lamp.'\n\"\"\"\nresponse = get_completion(prompt)\nprint(response)\n```\n:::\n\n\n## Output\n\nDear Sir/Madam,\n\nI hope this letter finds you well. My name is Joe, and I am writing to bring your attention to a specification document regarding a standing lamp. \n\nI kindly request that you take a moment to review the attached spec, as it contains important details about the standing lamp in question. \n\nThank you for your time and consideration. I look forward to hearing from you soon.\n\nSincerely,\nJoe\n\n\n# Format Conversion\n\n- ChatGPT can translate between formats. \n- The prompt should describe the input and output formats.\n\n## From dictionary to HTML \n\n::: {.cell execution_count=9}\n``` {.python .cell-code}\ndata_json = {\"restaurant employees\": [\n    {\"name\": \"Shyam\", \"email\": \"shyamjaiswal@gmail.com\"},\n    {\"name\": \"Bob\", \"email\": \"bob32@gmail.com\"},\n    {\"name\": \"Jai\", \"email\": \"jai87@gmail.com\"}\n]}\n\nprompt = f\"\"\"\nTranslate the following python dictionary from JSON to an HTML \\\ntable with column headers and title: {data_json}\n\"\"\"\nresponse = get_completion(prompt)\nprint(response)\n```\n:::\n\n\n## Output {.smaller}\n\n\n```{=html}\n<!DOCTYPE html>\n<html>\n<head>\n<style>\ntable {\n  font-family: arial, sans-serif;\n  border-collapse: collapse;\n  width: 100%;\n}\n\ntd, th {\n  border: 1px solid #dddddd;\n  text-align: left;\n  padding: 8px;\n}\n\ntr:nth-child(even) {\n  background-color: #dddddd;\n}\n</style>\n</head>\n<body>\n\n<h2>Restaurant Employees</h2>\n\n<table>\n  <tr>\n    <th>Name</th>\n    <th>Email</th>\n  </tr>\n  <tr>\n    <td>Shyam</td>\n    <td>shyamjaiswal@gmail.com</td>\n  </tr>\n  <tr>\n    <td>Bob</td>\n    <td>bob32@gmail.com</td>\n  </tr>\n  <tr>\n    <td>Jai</td>\n    <td>jai87@gmail.com</td>\n  </tr>\n</table>\n\n</body>\n</html>\n\n\n```\n\n\n\n# Spellcheck & Grammar check\n\nTo signal to the LLM that you want it to proofread your text, you instruct the model to 'proofread' or 'proofread and correct'\n\n## Text examples\n\n- Text examples are taken from [Writing Prompts](https://writingprompts.com/bad-grammar-examples/)\n\n::: {.cell execution_count=10}\n``` {.python .cell-code}\ntext = [\n    \"The girl with the black and white puppies have a ball.\",\n    \"Yolanda has her notebook.\",\n    \"Its going to be a long day. Does the car need it’s oil changed?\",\n    \"Their goes my freedom. There going to bring they’re suitcases.\",\n    \"Your going to need you’re notebook.\",\n    \"That medicine effects my ability to sleep. Have you heard of the butterfly affect?\",\n    \"This phrase is to cherck chatGPT for speling abilitty\"\n]\n```\n:::\n\n\n## Proofreading\n\n::: {.cell execution_count=11}\n```` {.python .cell-code}\nprompt = f\"\"\"\nProofread and correct all sentences in the following Python list delimited by triple backticks and rewrite the corrected version. Mark the corrected words in markdown italic style using the  symbol. If you don't find any errors in an item, just say \"No errors found\":\n```{text}```\n\"\"\"\n\nresponse = get_completion(prompt)\nprint(response)\n````\n:::\n\n\n- Output:\n* ['The girl with the black and white puppies *has* a ball.']\n* ['*Yolanda* has her notebook.']\n* ['*It's* going to be a long day. Does the car need *its* oil changed?']\n* ['*There* goes my freedom. *They're* going to bring *their* suitcases.']\n* ['*You're* going to need *your* notebook.']\n* ['That medicine *affects* my ability to sleep. Have you heard of the butterfly *effect*?']\n* ['This phrase is *to check* *ChatGPT* for *spelling ability*.']\n\n\n## Review about a toy  {.smaller}\n\n::: {.cell execution_count=12}\n``` {.python .cell-code}\ntext = f\"\"\"\nGot this for my daughter for her birthday cuz she keeps taking \\\nmine from my room.  Yes, adults also like pandas too.  She takes \\\nit everywhere with her, and it's super soft and cute.  One of the \\\nears is a bit lower than the other, and I don't think that was \\\ndesigned to be asymmetrical. It's a bit small for what I paid for it \\\nthough. I think there might be other options that are bigger for \\\nthe same price.  It arrived a day earlier than expected, so I got \\\nto play with it myself before I gave it to my daughter.\n\"\"\"\n```\n:::\n\n\n## Proofreading\n\n::: {.cell execution_count=13}\n``` {.python .cell-code}\nprompt = f\"proofread and correct this review: ```{text}```\"\n\nresponse = get_completion(prompt)\nprint(response)\n```\n:::\n\n\n## Output\n\nGot this for my daughter for her birthday because she keeps taking mine from my room. Yes, adults also like pandas too. She takes it everywhere with her, and it's super soft and cute. However, one of the ears is a bit lower than the other, and I don't think that was designed to be asymmetrical. Additionally, it's a bit small for what I paid for it. I believe there might be other options that are bigger for the same price. On the positive side, it arrived a day earlier than expected, so I got to play with it myself before I gave it to my daughter.\n\n## Display differences\n\n- Use the following code to display the dfferences between the two texts:\n\n::: {.cell execution_count=14}\n``` {.python .cell-code}\ndiff = Redlines(text, response)\n\ndisplay(Markdown(diff.output_markdown))\n```\n:::\n\n\n## Make it more compelling\n\n::: {.cell execution_count=15}\n``` {.python .cell-code}\nprompt = f\"\"\"\nproofread and correct this review. Make it more compelling. \nEnsure it follows APA style guide and targets an advanced reader. \nOutput in markdown format.\nText: ```{text}```\n\"\"\"\n\nresponse = get_completion(prompt)\ndisplay(Markdown(response))\n```\n:::\n\n\n## Output {.smaller}\n\nTitle: A Delightful Gift for Panda Enthusiasts: A Review of the Soft and Adorable Panda Plush Toy\n\nReviewer: [Your Name]\n\nI recently purchased this charming panda plush toy as a birthday gift for my daughter, who has a penchant for \"borrowing\" my belongings from time to time. As an adult, I must admit that I too have fallen under the spell of these lovable creatures. This review aims to provide an in-depth analysis of the product, catering to advanced readers who appreciate a comprehensive evaluation.\n\nFirst and foremost, the softness and cuteness of this panda plush toy are simply unparalleled. Its irresistibly plush exterior makes it a joy to touch and hold, ensuring a delightful sensory experience for both children and adults alike. The attention to detail is evident, with its endearing features capturing the essence of a real panda. However, it is worth noting that one of the ears appears to be slightly asymmetrical, which may not have been an intentional design choice.\n\nWhile the overall quality of the product is commendable, I must express my slight disappointment regarding its size in relation to its price. Considering the investment made, I expected a larger plush toy. It is worth exploring alternative options that offer a more substantial size for the same price point. Nevertheless, this minor setback does not overshadow the undeniable appeal and charm of the panda plush toy.\n\nIn terms of delivery, I was pleasantly surprised to receive the product a day earlier than anticipated. This unexpected early arrival allowed me to indulge in some personal playtime with the panda plush toy before presenting it to my daughter. This added bonus further exemplifies the exceptional customer service provided by the seller.\n\nIn conclusion, the softness, cuteness, and attention to detail of this panda plush toy make it an ideal gift for panda enthusiasts of all ages. While the size may not fully meet expectations, the overall quality and timely delivery contribute to a positive purchasing experience. For those seeking a delightful and endearing companion, this panda plush toy is sure to bring joy and comfort to its lucky owner.\n\nNote: This review adheres to the APA style guide, providing a concise and compelling evaluation of the panda plush toy. The language used is targeted towards an advanced reader, ensuring a sophisticated and engaging review.\n\n\n## Show differences\n\n::: {.cell execution_count=16}\n``` {.python .cell-code}\ndiff2 = Redlines(text, response)\ndisplay(Markdown(diff2.output_markdown))\n```\n:::\n\n\n# Acknowledgments\n\n*This tutorial is mainly based on an excellent course provided by Isa Fulford from OpenAI and Andrew Ng from DeepLearningAI as well as [OpenAI's GPT best practices](https://platform.openai.com/docs/guides/gpt-best-practices)*\n\n# What's next? {background-image=\"../images/logo.png\" background-opacity=\"0.5\"}\n\n**Congratulations! You have completed this tutorial** 👍\n\n**Next, you may want to go back to the [lab's website](https://kirenz.github.io/lab-prompt/)**\n\n",
    "supporting": [
      "transforming_files"
    ],
    "filters": [],
    "includes": {}
  }
}